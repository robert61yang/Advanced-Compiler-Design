name: Autograding Tests
on:
  push:
  repository_dispatch:

permissions:
  checks: write
  actions: read
  contents: read
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          # cache: pip # cache during setup-python somehow may takes 2 mins on macos
          # cache-dependency-path: bril/bril-txt/pyproject.toml
      
      - name: Problem-0
        id: problem-0
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: check deno and pip installed on your os
          command: |
            deno -V
            pip -V
          timeout: 5
          max-score: 1

      - name: Install Bril
        run: |
          if timeout 10 bash install_bril.sh; then
            echo "install_bril.sh completed successfully within 10 seconds."
          else
            echo "install_bril.sh takes more than 10 seconds, which exceeds the time limit."
          fi

      - name: Problem-1
        id: problem-1
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: convert bril file to json format
          command: bril2json < .github/rem.bril > .github/rem.json
          timeout: 5 
          max-score: 2

      - name: Problem-2
        id: problem-2
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: run interpreter brili and store the brili output
          command: brili 9223372036854775783 6854775643 < .github/rem.json > .github/rem.tmp
          timeout: 5 
          max-score: 2

      - name: Problem-3
        id: problem-3
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: compare the brili output
          command: diff .github/rem.tmp .github/rem.out
          timeout: 5
          max-score: 2

      # Autograding Reporter
      - name: Autograding Reporter
        uses: classroom-resources/autograding-grading-reporter@v1
        env:
          PROBLEM-0_RESULTS: "${{steps.problem-0.outputs.result}}"
          PROBLEM-1_RESULTS: "${{steps.problem-1.outputs.result}}"
          PROBLEM-2_RESULTS: "${{steps.problem-2.outputs.result}}"
          PROBLEM-3_RESULTS: "${{steps.problem-3.outputs.result}}"
        with:
          runners: problem-0, problem-1, problem-2, problem-3
